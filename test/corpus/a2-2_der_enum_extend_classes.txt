==========
Derivative
==========

model M
equation
  x = der(y);
end M;

---

(stored_definitions
  (stored_definition
    (class_definition
      (class_prefixes)
      (long_class_specifier
        (IDENT)
        (equation_section
          (equation_list
            (simple_equation
              (simple_expression
                (primary_expression
                  (component_reference
                    (IDENT))))
              (expression
                (simple_expression
                  (primary_expression
                    (function_application
                      (function_call_args
                        (function_arguments
                          (expression
                            (simple_expression
                              (primary_expression
                                (component_reference
                                  (IDENT))))))))))))))
        (IDENT)))))

======================
Directional Derivative
======================

model M
equation
  x = der(y, z);
end M;

---

(stored_definitions
  (stored_definition
    (class_definition
      (class_prefixes)
      (long_class_specifier
        (IDENT)
        (equation_section
          (equation_list
            (simple_equation
              (simple_expression
                (primary_expression
                  (component_reference
                    (IDENT))))
              (expression
                (simple_expression
                  (primary_expression
                    (function_application
                      (function_call_args
                        (function_arguments
                          (expression
                            (simple_expression
                              (primary_expression
                                (component_reference
                                  (IDENT)))))
                          (expression
                            (simple_expression
                              (primary_expression
                                (component_reference
                                  (IDENT))))))))))))))
        (IDENT)))))

================
Enumeration List
================

type Size = enumeration(small, medium, large, xlarge);
model M
  Size t_shirt_size = Size.medium;
end M;

---

(stored_definitions
  (stored_definition
    (class_definition
      (class_prefixes)
      (enumeration_class_specifier
        (IDENT)
        (enum_list
          (enumeration_literal
            (IDENT))
          (enumeration_literal
            (IDENT))
          (enumeration_literal
            (IDENT))
          (enumeration_literal
            (IDENT))))))
  (stored_definition
    (class_definition
      (class_prefixes)
      (long_class_specifier
        (IDENT)
        (element_list
          (named_element
            (component_clause
              (type_specifier
                (name
                  (IDENT)))
              (component_list
                (component_declaration
                  (declaration
                    (IDENT)
                    (modification
                      (expression
                        (simple_expression
                          (primary_expression
                            (component_reference
                              (component_reference
                                (IDENT))
                              (IDENT))))))))))))
        (IDENT)))))

===================
Enumeration Literal
===================

type Size2 = enumeration(small "1st", medium "2nd", large "3rd", xlarge "4th");

---

(stored_definitions
  (stored_definition
    (class_definition
      (class_prefixes)
      (enumeration_class_specifier
        (IDENT)
        (enum_list
          (enumeration_literal
            (IDENT)
            (description_string
              (STRING)))
          (enumeration_literal
            (IDENT)
            (description_string
              (STRING)))
          (enumeration_literal
            (IDENT)
            (description_string
              (STRING)))
          (enumeration_literal
            (IDENT)
            (description_string
              (STRING))))))))

==============================
Enumeration Type as expression
==============================

model M
  replaceable type E=enumeration(:) "Substances in Fluid";
  Real c[E];
end M;

---

(stored_definitions
  (stored_definition
    (class_definition
      (class_prefixes)
      (long_class_specifier
        (IDENT)
        (element_list
          (named_element
            (class_definition
              (class_prefixes)
              (enumeration_class_specifier
                (IDENT)
                (description_string
                  (STRING)))))
          (named_element
            (component_clause
              (type_specifier
                (name
                  (IDENT)))
              (component_list
                (component_declaration
                  (declaration
                    (IDENT)
                    (array_subscripts
                      (subscript
                        (expression
                          (simple_expression
                            (primary_expression
                              (component_reference
                                (IDENT)))))))))))))
        (IDENT)))))
